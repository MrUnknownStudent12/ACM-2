#include <iostream>
using namespace std;

int cal(int n,int m)
{
    int i=n-12;
    m--;
    while (i) {
        n--;
        i=(i+m)%n;
    }
    if (n==1)
        return 1;
    return 0;
}
int main()
{
    int n,m;
    while (cin >> n&&n) {
        for (m=1; m; m++)
            if (cal(n,m))
            {
                cout << m << '\n';
                break;
            }
    }
    return 0;
}
/*
 Problem description
 在今年全国电能危机期间(由于缺少降雨导致的低水位造成的)，一个紧急预案开始启动。它会系统地、有步骤地切断我国各个地区的电源。全国被分成n个区域（吉林是区域1，…北京是区域13）。随便选一个数m，区域1的电源会被先切断，接下来的第m个区域的电源会被切断。超过n则转到1，并且跳过已经被关了电源的区域。
 比如：如果n=17，m=5，切断电源区域的顺序是：1，6，11，16，5，12，2，9，17，10，4，15，14，3，8，13，7。
 显然，最后切断电源的区域是北京是公平的(毕竟电源总部在那里)。所以对于给定的数n，这个m要仔细选择，以确保区域13是最后被关电源的区域。写一个程序读取区域数n并且酸出最小的m，保证北京是最后一个切断电源的。 
 
 Input
 输入可能包含多个测试数据。
 每个测试数据为单独的一行，只有一个数n(13≤n≤4000)。
 最后一行为单独的一个0表示输入的结束。 
 
 Output
 对于每一组测试数据，输出一行为一个单独的整数m。
 
 Sample Input
 17
 0
 Sample Output
 7
*/