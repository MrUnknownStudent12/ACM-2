#include <iostream>
using namespace::std;

int main()
{
	int o,h,n,i,j,flag=0,max=70000,a[1001]={0},b[1001]={0},w[1001]={0};
	cin >> o >> h;
	cin >> n;
	for(i=0;i<n;i++)
		cin >> a[i] >> b[i] >> w[i];
	for(i=0;i<n;i++)
		for(j=i+1;j<n;j++)
		{
			if(a[i]+a[j]>=o&&b[i]+b[j]>=h)
				flag=w[i]+w[j];
			if(flag<=max)
				max=flag;
		}
	cout << max << '\n';
	return 0;
}
/*
 Problem description
 一个蛙人现在拥有一些潜水用的特殊器材。这些器材均为一些圆筒，每一个圆筒中都包含两个部分，一部分装氧气，另一部分装氮气。现在我们给出每个圆筒的氮气和氧气的含量，还有它们的重量，试根据蛙人所需的两种气体的数量计算出蛙人所需携带的最少的重量。
 
 示例：假设这个蛙人拥有如下5个圆筒，每一个圆筒中氧气、氮气的含量（升）和它的重量都用一行三个整数来表示如下：
 
 3 36 120
 10 25 129
 5 50 250
 1 45 130
 4 20 119
 如果该蛙人需要5升的氧气和60升的氮气，那么它至少需要带2个总重249的圆筒（例如它取第一个和第二个圆筒或第四个和第五个圆筒）。 
 
 Input
 第一行包括用空格分开的两个整数t和a，1≤t≤21且1≤a≤79，表示蛙人所需的氧气和氮气的体积。第二行包括一个整数n，1≤n≤1000，为不同圆筒的数目。以下的n行每行包括一个对圆筒的描述，第i+2行包括三个用空格分开的整数ti、ai、wi，分别表示第i个圆筒中氧气、氮气的含量和该圆筒的重量。
 
 Output
 输出唯一的一个整数，表示为了满足蛙人的要求，它所需携带的最少重量。
 
 Sample Input
 5 60
 5
 3 36 120
 10 25 129
 5 50 250
 1 45 130
 4 20 119
 Sample Output
 249
*/