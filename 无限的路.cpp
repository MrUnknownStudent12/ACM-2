#include <iostream>
#include <math.h>
using namespace std;

int main()
{
    int i,t,x,x0,x1,y,y0,y1;
    cin >> t;
    while(t--)
    {
        cin >> x0 >> y0 >> x1 >> y1; 
        if (x0+y0>x1+y1) {
            x0^=x1^=x0^=x1;
            y0^=y1^=y0^=y1; 
        }
        x=x0+y0;
        y=x1+y1; 
        double line=sqrt(pow(x0-x1*1.0,2)+pow(y0-y1*1.0,2));//2点在同一直线上 
        double len=sqrt(2.0)*(x+x1-x0+y*(y-1.0)/2.0-x*(x+1.0)/2.0);//所有 斜率为1的直线的长度和 
        for (i=x;i<y; ++i)
            len+=sqrt(2.0*i*i+2.0*i+1);//x与y之间的全部斜线(斜率不为1)相加
        printf("%.3f\n",x==y?line:len);
    }
    return 0;
}
/*
 甜甜从小就喜欢画图画，最近他买了一支智能画笔，由于刚刚接触，所以甜甜只会用它来画直线，于是他就在平面直角坐标系中画出如下的图形：
 
 
 
 
 甜甜的好朋友蜜蜜发现上面的图还是有点规则的，于是他问甜甜：在你画的图中，我给你两个点，请你算一算连接两点的折线长度（即沿折线走的路线长度）吧。
 Input
 第一个数是正整数N（≤100）。代表数据的组数。
 每组数据由四个非负整数组成x1，y1，x2，y2；所有的数都不会大于100。
 Output
 对于每组数据，输出两点(x1,y1),(x2,y2)之间的折线距离。注意输出结果精确到小数点后3位。
 Sample Input
 5
 0 0 0 1
 0 0 1 0
 2 3 3 1
 99 99 9 9
 5 5 5 5
 Sample Output
 1.000
 2.414
 10.646
 54985.047
 0.000
*/